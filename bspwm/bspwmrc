#!/usr/bin/env bash

# ##############################################################################
# #                                 WINDOW RULES                               #
# ##############################################################################

rule -a kitty                       follow=on focus=on
rule -a Code                        follow=on focus=on
rule -a firefox                     follow=on focus=on
rule feh                            state=floating

bspc config border_width 2
bspc config window_gap 7
bspc config split_ratio 0.52
bspc config borderless_monocle true
bspc config gapless_monocle true
bspc config paddingless_monocle true
bspc config single_monocle false
bspc config focus_follows_pointer true

bspc rule -a Gimp desktop='^8' state=floating follow=on
bspc rule -a Chromium desktop='^2'
bspc rule -a mplayer2 state=floating
bspc rule -a Kupfer.py focus=on
bspc rule -a Screenkey manage=off

# ##############################################################################
# #                                 FUNCTIONS                                  #
# ##############################################################################

# Function to configure monitors and desktops
configure_monitors() {
  monitors=($(xrandr --listmonitors | awk 'NR>1 {print $4}'))
  monitor_count=${#monitors[@]}

  if [ "$monitor_count" -eq 0 ]; then
    bspc monitor -d 'α' 'β' 'γ' 'δ' 'ε' 'ζ' 'η' 'θ'
  else
    desktops=('α' 'β' 'γ' 'δ' 'ε' 'ζ' 'η' 'θ')
    desktop_count=${#desktops[@]}

    for i in "${!monitors[@]}"; do
      monitor="${monitors[$i]}"
      start_index=$((i * desktop_count / monitor_count))
      end_index=$(((i + 1) * desktop_count / monitor_count - 1))
      bspc monitor "$monitor" -d "${desktops[@]:$start_index:$((end_index - start_index + 1))}"
    done
  fi

  # Set primary monitor and resolution
  if [ "$monitor_count" -gt 0 ]; then
    primary_monitor=${monitors[0]}
    xrandr --output "$primary_monitor" --primary --mode 1920x1080 # <- your resolution
  fi
}

# Function to launch polybar withour errors
launch_polybar() {
  if [ -x ~/.config/polybar/launch.sh ]; then
    ~/.config/polybar/launch.sh &>/dev/null &
    return 0
  else
    return 1
  fi
}

# Function to set the wallpaper (in the first boot you need to change it manually)
set_wallpaper() {
  if [ -x ~/.fehbg ]; then
    ~/.fehbg &
    return 0
  else
    return 1
  fi
}

# Function to start sxhkd without errors
start_sxhkd() {
  sxhkd &
}

# ##############################################################################
# #                      INITIALIZE PROGRAMS AND SCRIPTS                       #
# ##############################################################################

# Initialize sxhkd
start_sxhkd

# Configure monitors and desktops
configure_monitors

# Launch polybar
launch_polybar

# Set default cursor
xsetroot -cursor_name left_ptr &

# Set the last wallpaper
set_wallpaper